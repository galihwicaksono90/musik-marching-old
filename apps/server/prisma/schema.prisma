// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../musik.db"
}

model User {
  id                   String    @id @default(uuid())
  name                 String
  email                String    @unique
  password             String?
  role                 String
  scores               Score[]   @relation("contributions")
  verifiedScores       Score[]   @relation("verifiedScores")
  verifiedBy           User?     @relation("verifiedBy", fields: [verifiedById], references: [id])
  verifiedById         String?
  verifiedContributors User[]    @relation("verifiedBy")
  createdAt            DateTime  @default(now())
  updatedAt            DateTime?
  deletedAt            DateTime?
}

model Score {
  id           String     @id @default(uuid())
  title        String
  description  String
  price        Float
  isExclusive  Boolean
  tags         ScoreTag[]
  author       String
  uploadedBy   User       @relation("contributions", fields: [uploadedById], references: [id])
  uploadedById String
  createdAt    DateTime   @default(now())
  verifiedAt   DateTime?
  verifiedBy   User?      @relation("verifiedScores", fields: [verifiedById], references: [id])
  verifiedById String?
  updatedAt    DateTime?
  deletedAt    DateTime?
}

model Tag {
  id        String     @id @default(uuid())
  title     String
  score     ScoreTag[]
  createdAt DateTime   @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
}

model ScoreTag {
  id        String    @id @default(uuid())
  score     Score     @relation(fields: [scoreId], references: [id])
  scoreId   String
  tag       Tag       @relation(fields: [tagId], references: [id])
  tagId     String
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}
